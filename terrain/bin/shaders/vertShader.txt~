attribute vec3 v_position;
attribute vec3 v_normal;

varying vec3 out_normal;
varying vec3 worldPos;
varying vec3 color;

uniform int height;
uniform int width;
uniform float terrainDimenScale;
uniform float verticalScalar;
uniform mat4 mvpMatrix;
uniform mat4 world;
uniform sampler2D gSampler;

void main(){
	// change the height based on the color of the texture
	vec2 new = vec2((v_position.x*(1/terrainDimenScale) + width/2)/width, (v_position.z*(1/terrainDimenScale) + height/2)/height);
	vec4 colorVal = texture2D(gSampler, new);
	v_position.y = (float) colorVal.z * verticalScalar;
	gl_Position = mvpMatrix * vec4(v_position, 1.0);

	// change the color based on the height of the texture
	color.y = 0;
	color.z = 1 - colorVal.z;
	color.x = colorVal.z;

	out_normal = (world * vec4(v_normal, 0.0)).xyz + height + width;
	worldPos = (world * vec4(v_position, 1.0)).xyz;
}
